
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVISION LPAREN MINUS NUMBER PLUS POWER RPAREN TIMESexpression : expression PLUS termexpression : expression MINUS termexpression : expression DIVISION termexpression : expression POWER termexpression : termterm : term TIMES factorterm : factorfactor : NUMBERfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'DIVISION':([1,2,4,5,7,12,13,14,15,16,17,],[-5,-8,-7,8,8,-6,-9,-3,-4,-1,-2,]),'RPAREN':([1,2,4,7,12,13,14,15,16,17,],[-5,-8,-7,13,-6,-9,-3,-4,-1,-2,]),'POWER':([1,2,4,5,7,12,13,14,15,16,17,],[-5,-8,-7,9,9,-6,-9,-3,-4,-1,-2,]),'NUMBER':([0,3,6,8,9,10,11,],[2,2,2,2,2,2,2,]),'TIMES':([1,2,4,12,13,14,15,16,17,],[6,-8,-7,-6,-9,6,6,6,6,]),'PLUS':([1,2,4,5,7,12,13,14,15,16,17,],[-5,-8,-7,10,10,-6,-9,-3,-4,-1,-2,]),'LPAREN':([0,3,6,8,9,10,11,],[3,3,3,3,3,3,3,]),'MINUS':([1,2,4,5,7,12,13,14,15,16,17,],[-5,-8,-7,11,11,-6,-9,-3,-4,-1,-2,]),'$end':([1,2,4,5,12,13,14,15,16,17,],[-5,-8,-7,0,-6,-9,-3,-4,-1,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([0,3,8,9,10,11,],[1,1,14,15,16,17,]),'expression':([0,3,],[5,7,]),'factor':([0,3,6,8,9,10,11,],[4,4,12,4,4,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','parser_rules.py',5),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','parser_rules.py',9),
  ('expression -> expression DIVISION term','expression',3,'p_expression_division','parser_rules.py',13),
  ('expression -> expression POWER term','expression',3,'p_expression_power','parser_rules.py',17),
  ('expression -> term','expression',1,'p_expression_term','parser_rules.py',21),
  ('term -> term TIMES factor','term',3,'p_term_times','parser_rules.py',25),
  ('term -> factor','term',1,'p_term_factor','parser_rules.py',29),
  ('factor -> NUMBER','factor',1,'p_factor_num','parser_rules.py',33),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','parser_rules.py',37),
]
